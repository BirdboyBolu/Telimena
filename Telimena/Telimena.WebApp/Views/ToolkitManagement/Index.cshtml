@using DotNetLittleHelpers
@using Telimena.WebApp
@using Telimena.WebApp.Controllers.Api.V1
@using Telimena.WebApp.Core.DTO.MappableToClient
@using Telimena.WebApp.Core.Messages
@using Telimena.WebApp.Core.Models
@using Telimena.WebApp.UiStrings
@model global::Telimena.WebApp.Models.Updater.ToolkitManagementViewModel
@{
    ViewBag.Title = "Index";
}

@section styles{
    @Styles.Render("//cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css")
    <style type="text/css">
        .confirmation { }

        .fileinput-button {
            position: relative;
            overflow: hidden;
        }

        .fileinput-button input {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            opacity: 0;
            filter: alpha(opacity=0);
            transform: translate(-300px, 0) scale(4);
            font-size: 23px;
            direction: ltr;
            cursor: pointer;
        }
    </style>
}


<div class="row">


    <div class="col-md-12 " id="@Strings.Id.ToolkitManagementForm">
        <div class="box box-primary box-solid box-solid">
            <div class="box-header">
                <h3 class="box-title">Telimena Toolkit</h3>
            </div>
            <div class="box-body">
                <div class="col-md-4">
                    <form id="uploadToolkitUpdatePackageForm" enctype="multipart/form-data" method="post">
                        <div class="box box-primary box-solid">
                            <div class="box-header">
                                <h3 class="box-title">Upload new Toolkit Version</h3>
                            </div>
                            <div class="box-body">
                                <label class="confirmation label label-md" id="@Strings.Id.ToolkitConfirmationBox" style="display: none"></label>
                                <div class="form-group">
                                    <span class="btn btn-success fileinput-button uploadedPackage">
                                        <i class="glyphicon glyphicon-plus"></i>
                                        <span>Add files...</span>
                                        <input type="file" id="@Strings.Id.ToolkitPackageUploader"
                                               name="uploadedPackage"/>
                                    </span>
                                    @*<button class="btn btn-warning cancel"
                                    type="button" >
                                <i class="glyphicon glyphicon-ban-circle"></i>
                                <span>Cancel</span>
                            </button>*@
                                </div>
                                <div class="InfoContainer" id="@Strings.Id.ToolkitUploadInfoBox">
                                    <div class="info fileName">
                                    </div>
                                    <div class="info fileType">
                                    </div>
                                    <div class="info fileSize">
                                    </div>
                                </div>
                                <div class="progress CustomProgress">
                                    <div class="progress-bar" role="progressbar"
                                         aria-valuenow="0" aria-valuemin="0"
                                         aria-valuemax="100" style="width: 0%;">
                                        <span></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                        <input type="submit" value="Submit" class="btn btn-lg btn-primary" id="@Strings.Id.SubmitToolkitUpload"/>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>


                <div class="col-md-8">


                    <div class="box box-primary box-solid">
                        <div class="box-header">
                            <h3 class="box-title">Toolkit Packages</h3>
                        </div>
                        <div class="box-body">
                            <label class="confirmation label label-md" style="display: none"></label>
                            <table class="table table-bordered table-hover dataTable">
                                <thead>
                                <tr>
                                    <th>Toolkit Data Id</th>
                                    <th>Package Id</th>
                                    <th>Toolkit Version</th>
                                    <th>Uploaded Date</th>
                                    <th>File Size</th>
                                </tr>
                                </thead>
                                <tbody>

                                @foreach (TelimenaToolkitData toolkitData in Model.ToolkitPackages)
                                {
                                    <tr>
                                        <td>@(toolkitData.Guid)</td>
                                        <td>@(toolkitData.TelimenaPackageInfo?.Guid)</td>

                                        <td>
                                            <a href="@(Url.LatestApiUrl(ToolkitController.Routes.Get, new {id =  toolkitData?.TelimenaPackageInfo?.Guid}))">@toolkitData.Version</a>
                                        </td>
                                        @if (toolkitData.TelimenaPackageInfo != null)
                                        {
                                            <td class="utcdate-tolocaldate">@(toolkitData.TelimenaPackageInfo?.UploadedDate.ToString(Strings.DateTimeFormat))</td>
                                        }
                                        else
                                        {
                                            <td>
                                                <label class="label label-danger">Package not uploaded</label>
                                            </td>
                                        }
                                        <td>@(toolkitData.TelimenaPackageInfo?.FileSizeBytes.ConvertBytesToMegabytes()) MB</td>
                                    </tr>
                                }
                                </tbody>

                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


</div>


<div class="row">

<div class="col-md-12 ">
    <div class="box box-primary box-solid">
        <div class="box-header">
            <h3 class="box-title">Updaters</h3>
        </div>
        <div class="box-body">
            <div class="col-md-4">
                <form id="uploadUpdaterUpdatePackageForm" enctype="multipart/form-data" method="post">
                    <div class="box box-primary  box-solid">
                        <div class="box-header">
                            <h3 class="box-title">Upload new Updater Version</h3>
                        </div>
                        <div class="box-body">
                            <label class="confirmation label label-md" id="@Strings.Id.UpdaterConfirmationBox" style="display: none"></label>
                            <div class="form-group">
                                <label>Required toolkit version: </label>
                                <input class="form-control" type="text" id="updaterToolkitVersionNeeded" value="0.0.0.0" />
                            </div>
                            <div class="form-group">
                                <label>Internal name: </label>
                                <input class="form-control" type="text" id="@Strings.Id.UpdaterInternalName" value="@DefaultToolkitNames.UpdaterInternalName" />
                            </div>
                            <div class="form-group">
                                <label>Updater executable name: </label>
                                <input class="form-control" type="text" id="@Strings.Id.UpdaterExecutableName" value="@DefaultToolkitNames.UpdaterFileName" />
                            </div>
                            <div class="form-group">
                                <span class="btn btn-success fileinput-button uploadedPackage">
                                    <i class="glyphicon glyphicon-plus"></i>
                                    <span>Add files...</span>
                                    <input type="file" id="@Strings.Id.UpdaterPackageUploader"
                                           name="uploadedPackage" />
                                </span>
                            </div>
                            <div class="InfoContainer" id="@Strings.Id.UpdaterUploadInfoBox">
                                <div class="info fileName">
                                </div>
                                <div class="info fileType">
                                </div>
                                <div class="info fileSize">
                                </div>
                            </div>
                            <div class="progress CustomProgress">
                                <div class="progress-bar" role="progressbar"
                                     aria-valuenow="0" aria-valuemin="0"
                                     aria-valuemax="100" style="width: 0%;">
                                    <span></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="">
                                    <input type="submit" value="Submit" id="@Strings.Id.SubmitUpdaterUpload" class="btn btn-lg btn-primary" />
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>


            <div class="col-md-8">


                <div class="box box-primary box-solid">
                    <div class="box-header">
                        <h3 class="box-title">Updater Packages</h3>
                    </div>
                    <div class="box-body">
                        <label class="confirmation label label-md" style="display: none"></label>
                        <table class="table table-bordered table-hover dataTable" id="@Strings.Id.UpdaterPackagesTable">
                            <thead>
                            <tr>
                                <th >Id</th>
                                <th>Internal name</th>
                                <th>Is public</th>
                                <th>Owner</th>
                                <th>File</th>
                                <th>Version</th>
                                <th>Uploaded Date</th>
                                <th>File Size</th>
                                <th>Minimum toolkit Version</th>
                            </tr>
                            </thead>
                            <tbody>

                            @foreach (UpdaterPackageInfo pkg in Model.UpdaterPackages)
                            {
                                <tr>
                                    <td>@pkg.Updater.Guid</td>
                                    <td>@pkg.Updater.InternalName</td>
                                    <td style="text-align: center">
                                        <input type="checkbox" name="@Strings.Name.ToggleIsPublic" data-updater-id="@pkg.Updater.Guid" onchange="ToggleIsPublic(this)" @(pkg.Updater.IsPublic ? "checked" : "")/>
                                    </td>
                                    <td>@pkg.Updater.DeveloperAccount.Name</td>
                                    <td>@pkg.Updater.FileName</td>
                                    <td>
                                        <a href="@(Url.LatestApiUrl(UpdatersController.Routes.Get, new {id = pkg.Guid}))">@pkg.Version</a>
                                    </td>
                                    <td class="utcdate-tolocaldate">@pkg.UploadedDate.ToString(Strings.DateTimeFormat)</td>
                                    <td>@pkg.FileSizeBytes.ConvertBytesToMegabytes() MB</td>
                                    <td>@(pkg.MinimumRequiredToolkitVersion)</td>
                                </tr>
                            }
                            </tbody>

                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

@section scripts
{
    @Scripts.Render("//cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js")

    <script type="text/javascript">
        $(document).ready(function() {
            $('.dataTable').DataTable(
                {
                    order: [[0, 'desc']] 
                });
            globalUtcConversion();

            $('.uploadedPackage').change(function(e) { SingleFileSelected(e, $(this).find('input')) });
            $('#uploadUpdaterUpdatePackageForm').submit(function(e) {
                e.preventDefault();
                var form = $('#uploadUpdaterUpdatePackageForm')[0];
                var formData = new FormData(form);
                var modelString = CreateUpdaterPackage();
                formData.append('Model', modelString);
                UploadFile(formData, '@Url.LatestApiUrl(UpdatersController.Routes.Upload)', $(this).find(':submit'));
            });
            $('#uploadToolkitUpdatePackageForm').submit(function(e) {
                e.preventDefault();
                var form = $('#uploadToolkitUpdatePackageForm')[0];
                var formData = new FormData(form);
                UploadFile(formData, '@Url.LatestApiUrl(ToolkitController.Routes.Upload)', $(this).find(':submit'));
            });
        });


        function SingleFileSelected(evt, input) {
            var selectedFile = $(input)[0].files[0];
            if (selectedFile) {
                var fileSize = 0;
                if (selectedFile.size > 1048576) {
                    fileSize = Math.round(selectedFile.size * 100 / 1048576) / 100 + " MB";
                } else if (selectedFile.size > 1024) {
                    fileSize = Math.round(selectedFile.size * 100 / 1024) / 100 + " KB";
                } else {
                    fileSize = selectedFile.size + " Bytes";
                }
                var infoContainer = input.closest('.form-group').next('.InfoContainer');
                infoContainer.find(".fileName").text("Name : " + selectedFile.name);
                infoContainer.find(".fileType").text("Type : " + selectedFile.type);
                infoContainer.find(".fileSize").text("Size : " + fileSize);
            }
        }

        function CreateUpdaterPackage() {
            var model = {
                @nameof(UploadUpdaterRequest.MinimumCompatibleToolkitVersion): $('#updaterToolkitVersionNeeded').val(),
                @nameof(UploadUpdaterRequest.UpdaterInternalName): $('#@Strings.Id.UpdaterInternalName').val(),
                @nameof(UploadUpdaterRequest.UpdaterExecutableName): $('#@Strings.Id.UpdaterExecutableName').val(),
            };
            return JSON.stringify(model);

        }


        function ToggleIsPublic(input) {
            var id = $(input).data("updater-id");
            var url = '@Url.LatestApiUrl(UpdatersController.Routes.SetIsPublic, new { id = "__id__", isPublic = "__isPublic__" })';
            url = url
                .replace("__id__", id)
                .replace("__isPublic__", input.checked);

            $.ajax({
                type: 'PUT',
                url: url,
                success: function(result) {
                    ShowConfirmationBox(input,
                        "label-success",
                        result + ". Reloading page...");
                    setTimeout(location.reload.bind(location), 1500);
                },
                error: function(xhr) {
                    ShowConfirmationBox(input, "label-danger", xhr.responseJSON.Message);
                }
            });
        }


        function UploadFile(formData, url, button) {

            $.ajax({
                url:  url,
                type: 'POST',
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                xhr: function() {
                    var myXhr = $.ajaxSettings.xhr();
                    if (myXhr.upload) {
                        myXhr.upload.addEventListener('progress',
                            function(e) {
                                ProgressHandlingFunction(e, button);
                            },
                            false);
                    }
                    return myXhr;
                },
                //Ajax events
                success: function(result) {
                    ShowConfirmationBox(button, "label-success", result);
                },
                error: function(xhr) {
                    ShowConfirmationBox(button, "label-danger", xhr.responseJSON.Message);
                },


            });
        }


        function ProgressHandlingFunction(e, button) {
            var progressBar = $(button).closest('.form-group').prev('.progress').find('.progress-bar');
            if (e.lengthComputable) {
                var percentComplete = Math.round(e.loaded * 100 / e.total);
                progressBar.css("width",
                    percentComplete + '%').attr('aria-valuenow', percentComplete);
                progressBar.find('span').text(percentComplete + "%");
            } else {
                progressBar.find('span').text('unable to compute');
            }
        }

        function HideConfirmationBox(button) {
            $(button).closest('.box-body').find('.confirmation').hide();
        }

        function ShowConfirmationBox(button, classToAdd, text) {
            var btn = $(button).closest('.box-body').find('.confirmation');
            btn.show().attr("class", "confirmation label label-md " + classToAdd).text(text);
        }


    </script>

}
