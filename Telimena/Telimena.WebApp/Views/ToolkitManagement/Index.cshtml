@using DotNetLittleHelpers
@using Telimena.WebApp
@using Telimena.WebApp.Controllers.Api.V1
@using Telimena.WebApp.Core.DTO.MappableToClient

@using Telimena.Portal.Api.Models
@using Telimena.WebApp.Core.Messages
@using Telimena.Portal.Api.Models
@using Telimena.Portal.Api.Models.DTO
@using Telimena.WebApp.UiStrings
@model global::Telimena.WebApp.Models.Updater.ToolkitManagementViewModel
@{
    ViewBag.Title = "Index";
}

@section styles{
    <style type="text/css">

        .fileinput-button {
            position: relative;
            overflow: hidden;
        }

            .fileinput-button input {
                position: absolute;
                top: 0;
                right: 0;
                margin: 0;
                opacity: 0;
                filter: alpha(opacity=0);
                transform: translate(-300px, 0) scale(4);
                font-size: 23px;
                direction: ltr;
                cursor: pointer;
            }
    </style>
}
@Html.Partial("_TopAlertBox")

<section class="content-header">
    <h1>
        Toolkit
        <small>Manage Telimena client library</small>
    </h1>
</section>
<section class="content">
    <div class="row" id="@Strings.Id.ToolkitManagementForm">
        
        
        <div class="col-md-4">
            <form id="uploadToolkitUpdatePackageForm" enctype="multipart/form-data" class="form-horizontal" method="post">
                <div class="box box-primary">
                    <div class="box-header">
                        <h3 class="box-title">Upload new Toolkit Version</h3>
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            <label class="control-label col-sm-4">Package: </label>
                            <div class="col-sm-8">
                                <span class="btn btn-default fileinput-button uploadedPackage">
                                    <i class="glyphicon glyphicon-plus"></i>
                                    <span>Select file</span>
                                    <input type="file" name="uploadedPackage" id="@Strings.Id.ToolkitPackageUploader"/>
                                </span>
                            </div>
                        </div>
                        
                        <div class="info-container" id="@Strings.Id.ToolkitUploadInfoBox">
                            <div class="info fileName"></div>
                            <div class="info fileType"></div>
                            <div class="info fileSize"></div>
                        </div>
                        <div class="progress" style="display: none;">
                            <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0"
                                 aria-valuemax="100" style="width: 0%;">
                                <span></span>
                            </div>
                        </div>
                    </div>
                    <div class="box-footer">
                        <input type="submit" value="Submit" class="btn btn-block btn-primary" id="@Strings.Id.SubmitToolkitUpload"/>
                    </div>
                </div>
            </form>
        </div>

        <div class="col-md-8">


            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">Toolkit Packages</h3>
                </div>
                <div class="box-body">
                    <table class="table table-bordered table-hover dataTable">
                        <thead>
                            <tr>
                                <th>Uploaded Date</th>
                                <th>Toolkit Data Id</th>
                                <th>Package Id</th>
                                <th>Toolkit Version</th>
                                <th>File Size</th>
                            </tr>
                        </thead>
                        <tbody>

                        @foreach (TelimenaToolkitDataDto toolkitData in Model.ToolkitPackages)
                        {
                            <tr>
                                @if (toolkitData.TelimenaPackageInfo != null)
                                {
                                    <td class="@Strings.Css.DateTimeConversion">@(toolkitData.TelimenaPackageInfo?.UploadedDate.ToString(Strings.DateTimeFormat))</td>
                                }
                                else
                                {
                                    <td>
                                        <label class="label label-danger">Package not uploaded</label>
                                    </td>
                                }
                                <td>@(toolkitData.Id)</td>
                                <td>@(toolkitData.TelimenaPackageInfo?.Id)</td>

                                <td>
                                    <a href="@(Url.LatestApiUrl(ToolkitController.Routes.Get, new {id = toolkitData?.TelimenaPackageInfo?.Id}))">@toolkitData.Version</a>
                                </td>

                                <td>@(toolkitData.TelimenaPackageInfo?.FileSizeBytes.ConvertBytesToMegabytes()) MB</td>
                            </tr>
                        }
                        </tbody>

                    </table>

                </div>
            </div>
        </div>
    </div>
</section>

<section class="content-header">
    <h1>
        Updaters
        <small>Manage Updater executables</small>
    </h1>
</section>
<section class="content">

    <div class="row">
        <div class="col-md-4">
            <form id="uploadUpdaterUpdatePackageForm" enctype="multipart/form-data" class="form-horizontal" method="post">
                <div class="box box-primary ">
                    <div class="box-header">
                        <h3 class="box-title">Upload new Updater Version</h3>
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            <label class="control-label col-sm-4">Required toolkit version: </label>
                            <div class="col-sm-8">
                                <input class="form-control" type="text" id="updaterToolkitVersionNeeded" placeholder="0.0.0.0" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Updater Internal name: </label>
                            <div class="col-sm-8">
                                <input class="form-control" type="text" id="@Strings.Id.UpdaterInternalName" value="@DefaultToolkitNames.UpdaterInternalName" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Updater executable name: </label>
                            <div class="col-sm-8">
                                <input class="form-control" type="text" id="@Strings.Id.UpdaterExecutableName" value="@DefaultToolkitNames.UpdaterFileName" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-sm-4">Package: </label>
                            <div class="col-sm-8">
                                <span class="btn btn-default fileinput-button uploadedPackage">
                                    <i class="glyphicon glyphicon-plus"></i>
                                    <span>Select file</span>
                                    <input type="file" name="uploadedPackage" id="@Strings.Id.UpdaterPackageUploader"/>
                                </span>
                            </div>
                        </div>
                        
                        <div class="info-container" id="@Strings.Id.UpdaterUploadInfoBox">
                            <div class="info fileName"></div>
                            <div class="info fileType"></div>
                            <div class="info fileSize"></div>
                        </div>
                        <div class="progress" style="display: none;">
                            <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0"
                                 aria-valuemax="100" style="width: 0%;">
                                <span></span>
                            </div>
                        </div>
                    </div>
                    <div class="box-footer">
                        <input type="submit" value="Submit" class="btn btn-block btn-primary" id="@Strings.Id.SubmitUpdaterUpload"/>
                    </div>
                </div>
            </form>
        </div>

        <div class="col-md-8">


            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">Updater Packages</h3>
                </div>
                <div class="box-body">
                    <table class="table table-bordered table-hover dataTable" id="@Strings.Id.UpdaterPackagesTable">
                        <thead>
                        <tr>
                            <th>Uploaded Date</th>
                            <th>Id</th>
                            <th>Internal name</th>
                            <th>Is public</th>
                            <th>Owner</th>
                            <th>File</th>
                            <th>Version</th>
                            <th>File Size</th>
                            <th>Minimum toolkit Version</th>
                        </tr>
                        </thead>
                        <tbody>

                            @foreach (UpdaterPackageInfoDto pkg in Model.UpdaterPackages)
                            {
                            <tr>
                                <td class="@Strings.Css.DateTimeConversion">@pkg.UploadedDate.ToString(Strings.DateTimeFormat)</td>
                                <td>@pkg.Updater.Id</td>
                                <td>@pkg.Updater.InternalName</td>
                                <td style="text-align: center">
                                    <input type="checkbox" name="@Strings.Name.ToggleIsPublic" data-updater-id="@pkg.Updater.Id" onchange="ToggleIsPublic(this)" @(pkg.Updater.IsPublic ? "checked" : "") />
                                </td>
                                <td>@pkg.Updater.DeveloperTeamName</td>
                                <td>@pkg.Updater.FileName</td>
                                <td>
                                    <a href="@(Url.LatestApiUrl(UpdatersController.Routes.Get, new {id = pkg.Id}))">@pkg.Version</a>
                                </td>
                                <td>@pkg.FileSizeBytes.ConvertBytesToMegabytes() MB</td>
                                <td>@(pkg.MinimumRequiredToolkitVersion)</td>
                            </tr>
                            }
                        </tbody>

                    </table>

                </div>
            </div>
        </div>
    </div>
</section>

@section scripts
{

    <script type="text/javascript">
        $(document).ready(function () {
            globalUtcConversion();
            $.fn.dataTable.moment('@Strings.MomentJsDateTimeFormat');
            $('.dataTable').DataTable(
                {
                    order: [[0, 'desc']]
                });

            $('.uploadedPackage').change(function(e) { SingleFileSelected(e, $(this).find('input')) });
            $('#uploadUpdaterUpdatePackageForm').submit(function(e) {
                e.preventDefault();
                var form = $('#uploadUpdaterUpdatePackageForm')[0];
                var formData = new FormData(form);
                var modelString = CreateUpdaterPackage();
                formData.append('Model', modelString);
                UploadFile(formData, '@Url.LatestApiUrl(UpdatersController.Routes.Upload)', $(this).find(':submit'));
            });
            $('#uploadToolkitUpdatePackageForm').submit(function(e) {
                e.preventDefault();
                var form = $('#uploadToolkitUpdatePackageForm')[0];
                var formData = new FormData(form);
                UploadFile(formData, '@Url.LatestApiUrl(ToolkitController.Routes.Upload)', $(this).find(':submit'));
            });
        });


        function SingleFileSelected(evt, input) {
            var selectedFile = $(input)[0].files[0];
            if (selectedFile) {
                var fileSize = 0;
                if (selectedFile.size > 1048576) {
                    fileSize = Math.round(selectedFile.size * 100 / 1048576) / 100 + " MB";
                } else if (selectedFile.size > 1024) {
                    fileSize = Math.round(selectedFile.size * 100 / 1024) / 100 + " KB";
                } else {
                    fileSize = selectedFile.size + " Bytes";
                }
                var infoContainer = input.closest('.form-group').next('.info-container');
                infoContainer.find(".fileName").text("Name : " + selectedFile.name);
                infoContainer.find(".fileType").text("Type : " + selectedFile.type);
                infoContainer.find(".fileSize").text("Size : " + fileSize);
            }
        }

        function CreateUpdaterPackage() {
            var model = {
                @nameof(UploadUpdaterRequest.MinimumCompatibleToolkitVersion): $('#updaterToolkitVersionNeeded').val(),
                @nameof(UploadUpdaterRequest.UpdaterInternalName): $('#@Strings.Id.UpdaterInternalName').val(),
                @nameof(UploadUpdaterRequest.UpdaterExecutableName): $('#@Strings.Id.UpdaterExecutableName').val(),
            };
            return JSON.stringify(model);

        }


        function ToggleIsPublic(input) {
            var id = $(input).data("updater-id");
            var url = '@Url.LatestApiUrl(UpdatersController.Routes.SetIsPublic, new { id = "__id__", isPublic = "__isPublic__" })';
            url = url
                .replace("__id__", id)
                .replace("__isPublic__", input.checked);

            $.ajax({
                type: 'PUT',
                url: url,
                success: function(result) {
                    showSuccessTopAlertAndRefresh(result);
                },
                error: function(xhr) {
                    showDangerTopAlert(getXhrErrorMessage(xhr));
                }
            });
        }


        function UploadFile(formData, url, button) {

            $.ajax({
                url:  url,
                type: 'POST',
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                xhr: function() {
                    var myXhr = $.ajaxSettings.xhr();
                    if (myXhr.upload) {
                        myXhr.upload.addEventListener('progress',
                            function(e) {
                                ProgressHandlingFunction(e, button);
                            },
                            false);
                    }
                    return myXhr;
                },
                //Ajax events
                success: function(result) {
                    showSuccessTopAlert(result);
                },
                error: function(xhr) {
                    showDangerTopAlert(getXhrErrorMessage(xhr));
                },


            });
        }


        function ProgressHandlingFunction(e, button) {
            var progressBar = $(button).closest('.form-group').prev('.progress').find('.progress-bar');
            if (e.lengthComputable) {
                var percentComplete = Math.round(e.loaded * 100 / e.total);
                progressBar.css("width",
                    percentComplete + '%').attr('aria-valuenow', percentComplete);
                progressBar.find('span').text(percentComplete + "%");
            } else {
                progressBar.find('span').text('unable to compute');
            }
        }


    </script>

}
