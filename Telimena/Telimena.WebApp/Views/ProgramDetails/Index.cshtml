@using Telimena.WebApp.Core.Messages
@model Telimena.WebApp.Models.ProgramDetails.ProgramDetailsViewModel
@{
    ViewBag.Title = "Index";
}

@section styles{
    @Styles.Render("//cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css")
    <style type="text/css">
        .confirmation { }

        .fileinput-button {
            position: relative;
            overflow: hidden;
        }
        .fileinput-button input
        {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            opacity: 0;
            filter: alpha(opacity=0);
            transform: translate(-300px, 0) scale(4);
            font-size: 23px;
            direction: ltr;
            cursor: pointer;
        }
    </style>
}



<div class="row">
    <div class="col-md-4">
        <div class="box box-primary">
            <div class="box-header">
                <h3 class="box-title">Program summary</h3>
            </div>
            <div class="box-body">
                <div class="form-group">
                    <label>Name: </label>
                    <span>@Model.ProgramName</span>
                </div>
                <div class="form-group">
                    <label>Id: </label>
                    <span>@Model.ProgramId</span>
                </div>
                <div class="form-group">
                    <label>Latest version: </label>
                    <span id="latestVersion">...</span>
                </div>
                <div class="form-group">
                    <label>Versions count: </label>
                    <span id="versionsCount">...</span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">

        <div class="box box-primary">
            <div class="box-header">
                <h3 class="box-title">Version controlling</h3>
            </div>
            <div class="box-body">
                <label class="confirmation label label-md" style="display: none"></label>
                <div class="form-group">
                    <label>Set latest version to: </label>
                    <input type="text" id="newLatestVersionTextBox" />
                </div>
                <div class="form-group">
                    <div class="">
                        <input type="submit" id="setLatestVersionButton" value="Set version" class="btn btn-primary" />

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">

    <div class="col-md-6">
        <form id="uploadUpdatePackageForm" enctype="multipart/form-data" method="post">
            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">Create Update Package</h3>
                </div>
                <div class="box-body">
                    <label class="confirmation label label-md" style="display: none"></label>
                    <div class="form-group">
                        <label>Update package version: </label>
                        <input type="text" id="updatePackageVersion"/>
                    </div>
                    <div class="form-group">
                        <span class="btn btn-success fileinput-button">
                            <i class="glyphicon glyphicon-plus"></i>
                            <span>Add files...</span>
                            <input type="file"
                                   name="uploadedPackage" id="uploadedPackage"/>
                        </span>
                        <button class="btn btn-warning cancel"
                                type="button" id="Cancel_btn">
                            <i class="glyphicon glyphicon-ban-circle"></i>
                            <span>Cancel</span>
                        </button>
                    </div>
                    <div class="InfoContainer">
                        <div id="Imagecontainer"></div>
                        <div id="fileName" class="info">
                        </div>
                        <div id="fileType" class="info">
                        </div>
                        <div id="fileSize" class="info">
                        </div>
                    </div>
                    <div class="progress CustomProgress">
                        <div id="fileProgress"
                             class="progress-bar" role="progressbar"
                             aria-valuenow="0" aria-valuemin="0"
                             aria-valuemax="100" style="width: 0%;">
                            <span></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="">
                            <input type="submit" value="Create Package" class="btn btn-lg btn-primary"/>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    
    <div class="col-md-6">

        <div class="box box-primary">
            <div class="box-header">
                <h3 class="box-title">Updates Packages</h3>
            </div>
            <div class="box-body">
                <ol>
                    @foreach (var pkg in Model.UpdatePackages)
                    {
                        <li>ID: @pkg.Id VERSION: @pkg.Version</li>
                    }
                </ol>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("//cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js")

<script type="text/javascript">
    $(document).ready(function() {
        LoadCurrentVersion();
        $('#setLatestVersionButton').click(function () {
            HideConfirmationBox(this);
            SetLatestVersion(this);
        });
        $('#uploadedPackage').change(SingleFileSelected);
        $('#uploadUpdatePackageForm').submit(CreateUpdatePackage);
    });

    function SingleFileSelected(evt) {
        var selectedFile = ($("#uploadedPackage"))[0].files[0];
        if (selectedFile) {
            var fileSize = 0;
            if (selectedFile.size > 1048576) {
                fileSize = Math.round(selectedFile.size * 100 / 1048576) / 100 + " MB";
            }
            else if (selectedFile.size > 1024) {
                fileSize = Math.round(selectedFile.size * 100 / 1024) / 100 + " KB";
            }
            else {
                fileSize = selectedFile.size + " Bytes";
            }

            $("#fileName").text("Name : " + selectedFile.name);
            $("#fileType").text("Type : " + selectedFile.type);
            $("#fileSize").text("Size : " + fileSize);
        }
    }

    function UploadFile(button, modelString) {
        var form = $('#uploadUpdatePackageForm')[0];
        var formData = new FormData(form);
        formData.append('Model', modelString);
        $.ajax({
            url: '/api' + '@Url.Action("UploadUpdatePackage", "Programs")',
            type: 'POST',
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            xhr: function () { 
                var myXhr = $.ajaxSettings.xhr();
                if (myXhr.upload) { 
                    myXhr.upload.addEventListener('progress', ProgressHandlingFunction,
                        false); 
                }
                return myXhr;
            },
            //Ajax events
            success: function(result) {
                ShowConfirmationBox(button, "label-success", 'Uploaded package with ID: [' + result +']');
            },
            error: function (xhr) {
                ShowConfirmationBox(button, "label-danger", xhr.responseJSON.Message );

            },
            complete: function (e, e2, e3) {
                $(button).disable();
            },
                
        });
    }


    function CreateUpdatePackage(e) {
        e.preventDefault();
        var model = {
            @nameof(CreateUpdatePackageRequest.ProgramId) :@Model.ProgramId,
            @nameof(CreateUpdatePackageRequest.PackageVersion) : $('#updatePackageVersion').val(),
        };
        var modelString = JSON.stringify(model);

        ValidateUpdatePackageRequest($(this).find(':submit'), modelString, UploadFile);

    }

    function ProgressHandlingFunction(e) {
        if (e.lengthComputable) {
            var percentComplete = Math.round(e.loaded * 100 / e.total);
            $("#fileProgress").css("width",
                percentComplete + '%').attr('aria-valuenow', percentComplete);
            $('#fileProgress span').text(percentComplete + "%");
        }
        else {
            $('#fileProgress span').text('unable to compute');
        }
    }

    function HideConfirmationBox(button) {
        $(button).closest('.box-body').find('.confirmation').hide();
}

    function ShowConfirmationBox(button, classToAdd, text) {
        var btn = $(button).closest('.box-body').find('.confirmation');
        btn.show().attr("class", "confirmation label label-md " + classToAdd).text(text);
    }

    function ValidateUpdatePackageRequest(button, modelString, successCallback) {
        
        $.ajax({
                type: 'POST',
                url: '/api'+'@Url.Action("ValidatePackageVersion", "Programs")',
                contentType: "application/json; charset=utf-8",
                datatype: 'Json',
                data: modelString
            })
            .done(function () {
                successCallback(button, modelString);
            })
            .fail(function (xhr) {
                ShowConfirmationBox(button, 'label-danger', 'Error: ' + xhr.responseJSON.Message);
            });
    }

    function LoadCurrentVersion() {
        $('#latestVersion').html('...');
        $.ajax({
            type: 'GET',
            url: '/api'+'@Url.Action("GetLatestVersionInfo", "Programs")',
            data: { programId: @Model.ProgramId },
            success: function(response) {
                $('#latestVersion').html(response.PrimaryAssemblyVersion.LatestVersion);
            }
        });
        $('#versionsCount').html('...');
        $.ajax({
            type: 'GET',
            url: '/api'+'@Url.Action("GetVersionsCount", "Programs")',
            data: { programId: @Model.ProgramId },
            success: function(response) {
                $('#versionsCount').html(response);
            }
        });
    }

    function SetLatestVersion(button) {

        var dataObject = JSON.stringify({
            @nameof(SetLatestVersionRequest.ProgramId) : @Model.ProgramId,
            @nameof(SetLatestVersionRequest.Version) : $('#newLatestVersionTextBox').val(),
        });

        $.ajax({
            type: 'POST',
            url: '/api'+'@Url.Action("SetLatestVersion", "Programs")',
            contentType: "application/json; charset=utf-8",
            datatype: 'Json',
            data: dataObject
        })
        .done(function () {
            ShowConfirmationBox(button, 'label-success', 'Done!');
        })
        .fail(function (xhr) {
            ShowConfirmationBox(button, 'label-danger', 'Error: ' + xhr.responseJSON.Message );
        }).
        always(function() {
            LoadCurrentVersion();
        });
    }
</script>

}
