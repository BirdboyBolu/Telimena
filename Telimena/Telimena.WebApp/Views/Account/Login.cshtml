@using Telimena.WebApp.UiStrings
@model Telimena.WebApp.Models.Account.LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = null;
}
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Telimena</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
</head>

<body class="hold-transition login-page">
<div class="login-box">
    <div>
        <div class="login-logo">
            <img src="/Content/Telimena-full-logo.png" class="img" style="width: 360px;"  alt="TELIMENA">
        </div>
    </div>
    <!-- /.login-logo -->
    <div class="login-box-body">
        <p class="login-box-msg">Sign in to start your session</p>
        @using (Html.BeginForm("Login", "Account", new {ViewBag.ReturnUrl}, FormMethod.Post, new {role = "form", id = Strings.Id.LoginForm}))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group has-feedback">
                @Html.ValidationMessageFor(m => m.Email, "", new {@class = "text-danger"})
                @Html.TextBoxFor(m => m.Email, new {placeholder = "Email", @class = "form-control", id = Strings.Id.Email })
                <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.ValidationMessageFor(m => m.Password, "", new {@class = "text-danger"})
                @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = "Password", id = Strings.Id.Password })
                <span class="glyphicon glyphicon-lock form-control-feedback"></span>
            </div>
            <div class="row">
                <div class="col-xs-8">

                    <div class="checkbox icheck">
                        <label>
                            <div class="icheckbox_square-blue" aria-checked="false" aria-disabled="false" style="position: relative;">
                                @Html.CheckBoxFor(m => m.RememberMe, new {style = "position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;"})
                                <ins class="iCheck-helper" style="position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;"></ins>
                            </div>
                            Remember me
                        </label>

                    </div>
                </div>
                <!-- /.col -->
                <div class="col-xs-4">
                    <button type="submit" class="btn btn-primary btn-block btn-flat" id="@Strings.Id.SubmitLogin">Sign In</button>
                </div>
                <!-- /.col -->
            </div>
        }

        @Html.ActionLink("Forgot your password?", "ForgotPassword")
        <br>
        @Html.ActionLink("Register as a new user", "Register", null, new {@class = "text-center"})

    </div>
    <!-- /.login-box-body -->
</div>


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/adminlte/js")
<script>
    $(function() {
        $('input').iCheck({
            checkboxClass: 'icheckbox_square-blue',
            radioClass: 'iradio_square-blue',
            increaseArea: '20%' /* optional */
        });
    });
</script>
</body>
</html>