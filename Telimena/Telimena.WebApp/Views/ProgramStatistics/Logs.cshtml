@using DotNetLittleHelpers
@using Telimena.WebApp.Core.DTO
@using Telimena.WebApp.Models.Shared
@using Telimena.WebApp.UiStrings
@model Telimena.WebApp.Models.ProgramStatistics.ProgramStatisticsViewModel


@Html.Partial("_ProgramHeaderMenu", new ProgramHeaderMenuViewModel { ProgramName = Model?.ProgramName, TelemetryKey = Model?.TelemetryKey })

<div class="row">
    <div class="col-md-12">
        <div class="box box-primary">
            <div class="box-header">
                <h3 class="box-title">Log messages</h3>
            </div>
            <div class="box-body dataTables_wrapper form-inline dt-bootstrap">
                <table id="@Strings.Id.LogsTable" class="table table-bordered table-hover table-condensed" style="width: 100%;"></table>
            </div>
        </div>
    </div>
</div>

@section scripts
{

    <script type="text/javascript">
        $(document).ready(function () {

            function loadTable(url) {
                return {
                serverSide: true,
                searching: true,
                processing: true,
                lengthMenu: [[75, 150, 300, -1], [75, 150, 300, "All"]],
                pageLength: 75,
                order: [[ 0, 'desc' ]],
                ajax: url,

                columns: [
                    {
                        name: "@nameof(DataTableTelemetryDataBase.Timestamp)",
                        data: "@nameof(DataTableTelemetryDataBase.Timestamp).ToLowerFirstChar()",
                        render: function(data, type, row, meta) {
                            return toFormattedTimestamp(new Date(data));                        },
                        title:"@nameof(DataTableTelemetryDataBase.Timestamp)",
                        sortable: true,
                        searchable: false
                    },
                    {
                        name:  "@nameof(DataTableTelemetryDataBase.Sequence)",
                        data:  "@nameof(DataTableTelemetryDataBase.Sequence).ToLowerFirstChar()",
                        title: "@nameof(DataTableTelemetryDataBase.Sequence)",
                        sortable: true,
                        searchable: true,
                        render: function (data, type, row, meta) {
                            return renderSequenceHistoryUrl(data, type, "@Url.Action("SequenceHistory")?telemetryKey=@Model.TelemetryKey&sequenceId=" + encodeURIComponent(data));
                        }
                    },
                    {
                        name:  "@nameof(DataTableTelemetryDataBase.UserName)",
                        data:  "@nameof(DataTableTelemetryDataBase.UserName).ToLowerFirstChar()",
                        title: "@nameof(DataTableTelemetryDataBase.UserName)",
                        sortable: true,
                        searchable: true
                    },
                    {
                        name:  "@nameof(LogMessageData.LogLevel)",
                        data:  "@nameof(LogMessageData.LogLevel).ToLowerFirstChar()",
                        title: "@nameof(LogMessageData.LogLevel)",
                        sortable: true,
                        searchable: true
                    },
                    {
                        name:  "@nameof(LogMessageData.Message)",
                        data:  "@nameof(LogMessageData.Message).ToLowerFirstChar()",
                        title: "@nameof(LogMessageData.Message)",
                        sortable: true,
                        searchable: true
                    },
                 ]
            }
            }

            $('#@Strings.Id.LogsTable').DataTable(loadTable("@Url.Action("GetProgramUsageData")" + "?telemetryKey=@Model.TelemetryKey&itemType=@TelemetryItemTypes.LogMessage"));

        });
    </script>

}
