@using Telimena.WebApp.Core.DTO
@using Telimena.WebApp.Models.Shared
@using Telimena.WebApp.UiStrings
@model Telimena.WebApp.Models.ProgramStatistics.ProgramStatisticsViewModel
@{
    ViewBag.Title = "Dashboard";
}

@Html.Partial("_ProgramHeaderMenu", new ProgramHeaderMenuViewModel { ProgramName = Model.ProgramName, TelemetryKey = Model.TelemetryKey })

<section class="apps-summary" data-url="@Url.Action("GetSummaryCounts")?telemetryKey=@Model.TelemetryKey" id="@Strings.Id.ProgramDashboard">
    <div class="box box-default col-md-12">
        <div class="box-header">
            <h3 class="box-title">Loading</h3>
        </div>
        <div class="box-body">
            Summary incomming...
        </div>
        <div class="overlay">
            <i class="fa fa-refresh fa-spin"></i>
        </div>
    </div>
</section>
<div class="col-md-8">
    <div class="row">
        
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">All programs usages</h3>
                </div>
                <div class="box-body">
                    <table id="allProgramsUsageReport" class="table table-condensed table-bordered table-hover"></table>
                </div>
            </div>
        </div>

    </div>

</div>
<div class="col-md-4">
    @*<div class="box box-primary">
        <div class="box-header">
            <h3 class="box-title">Users overview</h3>
        </div>
        <div class="box-body">
            <div id="chart_div"></div>
        </div>
    </div>*@
    <div class="box box-primary">
        <div class="box-header">
            <h3 class="box-title">Users list</h3>
        </div>
        <div class="box-body">
            <table id="appUsersSummaryReport" class="table table-condensed table-bordered table-hover"></table>
        </div>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', {'packages':['corechart']});

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);



        function drawChart() {
            var jsonData = $.ajax({
                url: '@Url.Action("HierachyChart")' +"?id=1",
                dataType: "json",
                async: false
            }).responseText;
          
            // Create our data table out of JSON data loaded from server.
            var data = new google.visualization.DataTable(jsonData);

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
            chart.draw(data, {width: 400, height: 240});
        }
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $.fn.dataTable.moment('@Strings.MomentJsDateTimeFormat');

            $(".apps-summary").load($(".apps-summary").data("url"));

            $('#appUsersSummaryReport').DataTable({
                order: [[2, 'desc']],
                "ajax": {
                    url: "@Url.Action("GetAppUsersSummary")" + '?telemetryKey=@Model.TelemetryKey',
                    method: "post",
                    dataSrc: ""
                },
                "columns": [
                    {
                        title: 'Name',
                        "data": "@nameof(AppUsersSummaryData.UserName)"

                    },
                    {
                        title: '# Apps',
                        "data": "@nameof(AppUsersSummaryData.NumberOfApps)"

                    },
                    {
                        title: 'Activity score',
                        "data": "@nameof(AppUsersSummaryData.ActivityScore)"

                    },
                    {
                        title: 'First seen',
                        "data": "@nameof(AppUsersSummaryData.FirstSeenDate)",
                        render: function(data, type, row, meta) {
                            return toFormattedTimestamp(new Date(data));
                        }
                    },
                    {
                        title: 'Last active',
                        "data": "@nameof(AppUsersSummaryData.LastActiveDate)",
                        render: function(data, type, row, meta) {
                            return toFormattedTimestamp(new Date(data));
                        }
                    },
                ]
            });

            $('#allProgramsUsageReport').DataTable({
                order: [[1, 'desc']],
                "ajax": {
                    url: "@Url.Action("GetProgramUsages")" + '?telemetryKey=@Model.TelemetryKey',
                    method: "post",
                    dataSrc: ""
                },
                "columns": [
                    {
                        title: 'Name',
                        "data": "@nameof(ProgramUsageSummary.ProgramName)"

                    },
                    {
                        title: 'Last usage',
                        "data": "@nameof(ProgramUsageSummary.LastUsage)",
                        render: function(data, type, row, meta) {
                            return toFormattedTimestamp(new Date(data));
                        }
                    },
                    {
                        title: 'Usage today',
                         "data": "@nameof(ProgramUsageSummary.TodayUsageCount)"
                    },
                    {

                        title: 'Total usage',
                        "data": "@nameof(ProgramUsageSummary.TotalUsageCount)"
                    },
                    {
                        title: '# Views',
                        "data": "@nameof(ProgramUsageSummary.ViewsCount)"
                    },
                    {
                        title: 'View usage today',
                       "data": "@nameof(ProgramUsageSummary.TotalTodayViewsUsageCount)"
                    },
                    {
                        title: 'Total view usage',
                       "data": "@nameof(ProgramUsageSummary.TotalViewsUsageCount)"
                    },
                    {
                        title: '# Events',
                       "data": "@nameof(ProgramUsageSummary.EventsCount)"
                    },
                    {
                        title: 'Events today',
                       "data": "@nameof(ProgramUsageSummary.TotalTodayEventsUsageCount)"
                    },
                    {
                        title: 'Events total',
                       "data": "@nameof(ProgramUsageSummary.TotalEventsUsageCount)"
                    },
                ]
            });
        });
    </script>

}
